var lösungswort;
var wörterSammlung = ["Hallo"];
lösungswort = wörterSammlung[round(random(0,wörterSammlung.length-1))];
//println(lösungswort);
var schonGerateneBuchstaben = [];
var drawBuchstabenArray = [];
var schonEntdeckt=[];
var fehlerStufe = 0;
var drawArray = [];
var lineGröße = 0;
var drawArray = [];
var mistakes = 0;


var includes = function(sucharray,suche){
  for (var i = 0; i<sucharray.length;i++){
   if (sucharray[i]===suche){   
   return true;
   }
  }
  return false;
};

var hangman = function(part){
  
  
    
};
var drawLinien = function() {
    stroke(0, 0, 0);
     lineGröße = width / lösungswort.length;
    //erstellung der Linien 
    for (var i = 0; i < lösungswort.length; i++) {
        strokeWeight(2);
        line(i * lineGröße + 10, 450, i * lineGröße + lineGröße - 10, 450);
    }
    //println(solution);    
};
var fehler = function(){
  println("falsche buchstaben");  
  
};
var drawBuchstaben = function(){
    for (var i = 0; i<lösungswort.length;i++){
     if (schonGerateneBuchstaben[i]===true){
        fill(0, 0, 0);
        textAlign(CENTER);
        textSize(width / lösungswort.length / 2);
        text(lösungswort[i], lineGröße * i + lineGröße / 2, 440);
        //println("buchstabe Schreiben");
        noFill();
     }
    }
};
var explosion = function(startX,startY){
    this.x = startX;
    this.y = startY;
    
    var bullarray = [];
    
    fill(255, 191, 0);
    
    this.bullet = function(xpos,ypos){
      this.x = xpos;
      this.y = ypos;
      this.xdir = 0;
      this.ydir = 0;
      this.color = [random(200,230),random(100,150),random(0,80)];
      this.size = ceil(random(10,35));
    };
    
    
    for (var  i = 0; i<100;i++){
        bullarray[i] = new this.bullet(startX,startY);
        bullarray[i].xdir = random(-1,1)*10;
        bullarray[i].ydir = random(-1,1)*10;
        
    }
    this.life = 0;
    
    this.draw = function() {
        if (this.life<100){
        for (var i = 0; i<100;i++){
         fill(bullarray[i].color[0],bullarray[i].color[1],bullarray[i].color[2]);
         stroke(bullarray[i].color[0]+10,bullarray[i].color[1]+10,bullarray[i].color[2]+10);
         ellipse(bullarray[i].x,bullarray[i].y,bullarray[i].size,bullarray[i].size);  
         bullarray[i].x+=bullarray[i].xdir;
         bullarray[i].y+=bullarray[i].ydir;
         bullarray[i].size-=(bullarray[i].size/100);
        
        }
         this.life++;
        }
    };
    

};
var keyPressed = function(){
    
   var keyTest = key.toString();  
   var mitfehler = true;
   if (!includes(schonEntdeckt,key)){ 
    for (var i  = 0 ; i < lösungswort.length ; i++){
      if(keyTest===lösungswort[i]||keyTest.toUpperCase() === lösungswort[i]  ){
      append(drawArray,new explosion(lineGröße * i + lineGröße / 2,420)); 
      schonGerateneBuchstaben[i]=true;
      mitfehler = false;
      }
     }
    if(mitfehler){
     fehler();   
    }
    append(schonEntdeckt,key);
   }
   
};


background(0, 0, 0);





var draw = function() {
    background(255, 247, 247);
     drawLinien();
     
    drawBuchstaben();
      
    for (var i = 0; i<drawArray.length;i++){
    drawArray[i].draw();   
    }
    


};

/*
var mousePressed= function(){
    append(explarray,new explosion(mouseX,mouseY));
};

*/